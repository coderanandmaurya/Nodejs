Node.js as a File Server
---------------------------------------------------------------------------------------------
The Node.js file system module allows you to work with the file system on your computer.

To include the File System module, use the require() method:
----------------------
var fs = require('fs');
----------------------
----------------------
Common use for the File System module:

1. Read files
2. Create files
3. Update files
4. Delete files
5. Rename files
----------------------------------------------------------------
________________________________________________________________
------------
# Read Files
-------------
The fs.readFile() method is used to read files on your computer.
_________________________
1. create html file 
_________________________
<html>
<body>
<h1>My Header</h1>
<p>My paragraph.</p>
</body>
</html>
________________________________________________________________________
2. Create a Node.js file that reads the HTML file, and return the content
________________________________________________________________________
var http = require('http');
var fs = require('fs');
http.createServer(function (req, res) {
  fs.readFile('demofile1.html', function(err, data) {
    res.writeHead(200, {'Content-Type': 'text/html'});
    res.write(data);
    return res.end();
  });
}).listen(8080);
-------------------------------------------------------------------------
_________________________________________________________________________
----------------
# Create Files
----------------
The File System module has methods for creating new files:

1. fs.appendFile()
2. fs.open()
3. fs.writeFile()
--------------------------------------------------------------------------
1. fs.appendFile()
Create a new file using the appendFile() method:
--------------------------------------------------------------------------
--------------------------------------------------------------------------
var fs = require('fs');

fs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {
  if (err) throw err;
  console.log('Saved!');
});
--------------------------------------------------------------------------
--------------------------------------------------------------------------
2. fs.open()
The fs.open() method takes a "flag" as the second argument, if the flag is
 "w" for "writing", the specified file is opened for writing. If the file does not exist,
 an empty file is created:
--------------------------------------------------------------------------
--------------------------------------------------------------------------
var fs = require('fs');

fs.open('mynewfile2.txt', 'w', function (err, file) {
  if (err) throw err;
  console.log('Saved!');
});
----------------------------------------------------------------------------
----------------------------------------------------------------------------
3. fs.writeFile()
Create a new file using the writeFile() method:
----------------------------------------------------------------------------
----------------------------------------------------------------------------
var fs = require('fs');

fs.writeFile('mynewfile3.txt', 'Hello content!', function (err) {
  if (err) throw err;
  console.log('Saved!');
});
----------------------------------------------------------------------------
____________________________________________________________________________
----------------
# Update Files
-----------------
The File System module has methods for updating files:

1. fs.appendFile()
2. fs.writeFile()
----------------------------------------------------------------------------
1. fs.appendFile()
Append "This is my text." to the end of the file "mynewfile1.txt":
----------------------------------------------------------------------------
----------------------------------------------------------------------------
var fs = require('fs');

fs.appendFile('mynewfile1.txt', ' This is my text.', function (err) {
  if (err) throw err;
  console.log('Updated!');
});
----------------------------------------------------------------------------
----------------------------------------------------------------------------
2. fs.writeFile()
Replace the content of the file "mynewfile3.txt":
----------------------------------------------------------------------------
----------------------------------------------------------------------------
var fs = require('fs');

fs.writeFile('mynewfile3.txt', 'This is my text', function (err) {
  if (err) throw err;
  console.log('Replaced!');
});
----------------------------------------------------------------------------
____________________________________________________________________________
--------------
# Delete Files
--------------
To delete a file with the File System module,  use the fs.unlink() method.

The fs.unlink() method deletes the specified file:
--------------------------------------------
--------------------------------------------
var fs = require('fs');

fs.unlink('mynewfile2.txt', function (err) {
  if (err) throw err;
  console.log('File deleted!');
});

-----------------------------------------------------
_____________________________________________________________________________
----------------
# Rename Files
----------------
To rename a file with the File System module,  use the fs.rename() method.

The fs.rename() method renames the specified file:
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
var fs = require('fs');

fs.rename('mynewfile1.txt', 'myrenamedfile.txt', function (err) {
  if (err) throw err;
  console.log('File Renamed!');
});
------------------------------------------------------------------------------
------------------------------------------------------------------------------
